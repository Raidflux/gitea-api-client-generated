// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"giteaApiClientGenerated/models"
)

// AdminGetAllEmailsReader is a Reader for the AdminGetAllEmails structure.
type AdminGetAllEmailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminGetAllEmailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminGetAllEmailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewAdminGetAllEmailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /admin/emails] adminGetAllEmails", response, response.Code())
	}
}

// NewAdminGetAllEmailsOK creates a AdminGetAllEmailsOK with default headers values
func NewAdminGetAllEmailsOK() *AdminGetAllEmailsOK {
	return &AdminGetAllEmailsOK{}
}

/*
AdminGetAllEmailsOK describes a response with status code 200, with default header values.

EmailList
*/
type AdminGetAllEmailsOK struct {
	Payload []*models.Email
}

// IsSuccess returns true when this admin get all emails o k response has a 2xx status code
func (o *AdminGetAllEmailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this admin get all emails o k response has a 3xx status code
func (o *AdminGetAllEmailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin get all emails o k response has a 4xx status code
func (o *AdminGetAllEmailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this admin get all emails o k response has a 5xx status code
func (o *AdminGetAllEmailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this admin get all emails o k response a status code equal to that given
func (o *AdminGetAllEmailsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the admin get all emails o k response
func (o *AdminGetAllEmailsOK) Code() int {
	return 200
}

func (o *AdminGetAllEmailsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/emails][%d] adminGetAllEmailsOK %s", 200, payload)
}

func (o *AdminGetAllEmailsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/emails][%d] adminGetAllEmailsOK %s", 200, payload)
}

func (o *AdminGetAllEmailsOK) GetPayload() []*models.Email {
	return o.Payload
}

func (o *AdminGetAllEmailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminGetAllEmailsForbidden creates a AdminGetAllEmailsForbidden with default headers values
func NewAdminGetAllEmailsForbidden() *AdminGetAllEmailsForbidden {
	return &AdminGetAllEmailsForbidden{}
}

/*
AdminGetAllEmailsForbidden describes a response with status code 403, with default header values.

APIForbiddenError is a forbidden error response
*/
type AdminGetAllEmailsForbidden struct {
	Message string
	URL     string
}

// IsSuccess returns true when this admin get all emails forbidden response has a 2xx status code
func (o *AdminGetAllEmailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this admin get all emails forbidden response has a 3xx status code
func (o *AdminGetAllEmailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this admin get all emails forbidden response has a 4xx status code
func (o *AdminGetAllEmailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this admin get all emails forbidden response has a 5xx status code
func (o *AdminGetAllEmailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this admin get all emails forbidden response a status code equal to that given
func (o *AdminGetAllEmailsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the admin get all emails forbidden response
func (o *AdminGetAllEmailsForbidden) Code() int {
	return 403
}

func (o *AdminGetAllEmailsForbidden) Error() string {
	return fmt.Sprintf("[GET /admin/emails][%d] adminGetAllEmailsForbidden", 403)
}

func (o *AdminGetAllEmailsForbidden) String() string {
	return fmt.Sprintf("[GET /admin/emails][%d] adminGetAllEmailsForbidden", 403)
}

func (o *AdminGetAllEmailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header message
	hdrMessage := response.GetHeader("message")

	if hdrMessage != "" {
		o.Message = hdrMessage
	}

	// hydrates response header url
	hdrURL := response.GetHeader("url")

	if hdrURL != "" {
		o.URL = hdrURL
	}

	return nil
}
