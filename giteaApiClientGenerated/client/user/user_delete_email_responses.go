// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UserDeleteEmailReader is a Reader for the UserDeleteEmail structure.
type UserDeleteEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserDeleteEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUserDeleteEmailNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUserDeleteEmailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /user/emails] userDeleteEmail", response, response.Code())
	}
}

// NewUserDeleteEmailNoContent creates a UserDeleteEmailNoContent with default headers values
func NewUserDeleteEmailNoContent() *UserDeleteEmailNoContent {
	return &UserDeleteEmailNoContent{}
}

/*
UserDeleteEmailNoContent describes a response with status code 204, with default header values.

APIEmpty is an empty response
*/
type UserDeleteEmailNoContent struct {
}

// IsSuccess returns true when this user delete email no content response has a 2xx status code
func (o *UserDeleteEmailNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user delete email no content response has a 3xx status code
func (o *UserDeleteEmailNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user delete email no content response has a 4xx status code
func (o *UserDeleteEmailNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this user delete email no content response has a 5xx status code
func (o *UserDeleteEmailNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this user delete email no content response a status code equal to that given
func (o *UserDeleteEmailNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the user delete email no content response
func (o *UserDeleteEmailNoContent) Code() int {
	return 204
}

func (o *UserDeleteEmailNoContent) Error() string {
	return fmt.Sprintf("[DELETE /user/emails][%d] userDeleteEmailNoContent", 204)
}

func (o *UserDeleteEmailNoContent) String() string {
	return fmt.Sprintf("[DELETE /user/emails][%d] userDeleteEmailNoContent", 204)
}

func (o *UserDeleteEmailNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserDeleteEmailNotFound creates a UserDeleteEmailNotFound with default headers values
func NewUserDeleteEmailNotFound() *UserDeleteEmailNotFound {
	return &UserDeleteEmailNotFound{}
}

/*
UserDeleteEmailNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type UserDeleteEmailNotFound struct {
}

// IsSuccess returns true when this user delete email not found response has a 2xx status code
func (o *UserDeleteEmailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user delete email not found response has a 3xx status code
func (o *UserDeleteEmailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user delete email not found response has a 4xx status code
func (o *UserDeleteEmailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user delete email not found response has a 5xx status code
func (o *UserDeleteEmailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user delete email not found response a status code equal to that given
func (o *UserDeleteEmailNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the user delete email not found response
func (o *UserDeleteEmailNotFound) Code() int {
	return 404
}

func (o *UserDeleteEmailNotFound) Error() string {
	return fmt.Sprintf("[DELETE /user/emails][%d] userDeleteEmailNotFound", 404)
}

func (o *UserDeleteEmailNotFound) String() string {
	return fmt.Sprintf("[DELETE /user/emails][%d] userDeleteEmailNotFound", 404)
}

func (o *UserDeleteEmailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
