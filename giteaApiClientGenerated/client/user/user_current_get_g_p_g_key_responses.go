// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Raidflux/gitea-api-client-generated/giteaApiClientGenerated/models"
)

// UserCurrentGetGPGKeyReader is a Reader for the UserCurrentGetGPGKey structure.
type UserCurrentGetGPGKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserCurrentGetGPGKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserCurrentGetGPGKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUserCurrentGetGPGKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /user/gpg_keys/{id}] userCurrentGetGPGKey", response, response.Code())
	}
}

// NewUserCurrentGetGPGKeyOK creates a UserCurrentGetGPGKeyOK with default headers values
func NewUserCurrentGetGPGKeyOK() *UserCurrentGetGPGKeyOK {
	return &UserCurrentGetGPGKeyOK{}
}

/*
UserCurrentGetGPGKeyOK describes a response with status code 200, with default header values.

GPGKey
*/
type UserCurrentGetGPGKeyOK struct {
	Payload *models.GPGKey
}

// IsSuccess returns true when this user current get g p g key o k response has a 2xx status code
func (o *UserCurrentGetGPGKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user current get g p g key o k response has a 3xx status code
func (o *UserCurrentGetGPGKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user current get g p g key o k response has a 4xx status code
func (o *UserCurrentGetGPGKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user current get g p g key o k response has a 5xx status code
func (o *UserCurrentGetGPGKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user current get g p g key o k response a status code equal to that given
func (o *UserCurrentGetGPGKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the user current get g p g key o k response
func (o *UserCurrentGetGPGKeyOK) Code() int {
	return 200
}

func (o *UserCurrentGetGPGKeyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user/gpg_keys/{id}][%d] userCurrentGetGPGKeyOK %s", 200, payload)
}

func (o *UserCurrentGetGPGKeyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user/gpg_keys/{id}][%d] userCurrentGetGPGKeyOK %s", 200, payload)
}

func (o *UserCurrentGetGPGKeyOK) GetPayload() *models.GPGKey {
	return o.Payload
}

func (o *UserCurrentGetGPGKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GPGKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserCurrentGetGPGKeyNotFound creates a UserCurrentGetGPGKeyNotFound with default headers values
func NewUserCurrentGetGPGKeyNotFound() *UserCurrentGetGPGKeyNotFound {
	return &UserCurrentGetGPGKeyNotFound{}
}

/*
UserCurrentGetGPGKeyNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type UserCurrentGetGPGKeyNotFound struct {
}

// IsSuccess returns true when this user current get g p g key not found response has a 2xx status code
func (o *UserCurrentGetGPGKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user current get g p g key not found response has a 3xx status code
func (o *UserCurrentGetGPGKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user current get g p g key not found response has a 4xx status code
func (o *UserCurrentGetGPGKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user current get g p g key not found response has a 5xx status code
func (o *UserCurrentGetGPGKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user current get g p g key not found response a status code equal to that given
func (o *UserCurrentGetGPGKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the user current get g p g key not found response
func (o *UserCurrentGetGPGKeyNotFound) Code() int {
	return 404
}

func (o *UserCurrentGetGPGKeyNotFound) Error() string {
	return fmt.Sprintf("[GET /user/gpg_keys/{id}][%d] userCurrentGetGPGKeyNotFound", 404)
}

func (o *UserCurrentGetGPGKeyNotFound) String() string {
	return fmt.Sprintf("[GET /user/gpg_keys/{id}][%d] userCurrentGetGPGKeyNotFound", 404)
}

func (o *UserCurrentGetGPGKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
