// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Raidflux/gitea-api-client-generated/giteaApiClientGenerated/models"
)

// UserGetOAuth2ApplicationReader is a Reader for the UserGetOAuth2Application structure.
type UserGetOAuth2ApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserGetOAuth2ApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserGetOAuth2ApplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUserGetOAuth2ApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /user/applications/oauth2/{id}] userGetOAuth2Application", response, response.Code())
	}
}

// NewUserGetOAuth2ApplicationOK creates a UserGetOAuth2ApplicationOK with default headers values
func NewUserGetOAuth2ApplicationOK() *UserGetOAuth2ApplicationOK {
	return &UserGetOAuth2ApplicationOK{}
}

/*
UserGetOAuth2ApplicationOK describes a response with status code 200, with default header values.

OAuth2Application
*/
type UserGetOAuth2ApplicationOK struct {
	Payload *models.OAuth2Application
}

// IsSuccess returns true when this user get o auth2 application o k response has a 2xx status code
func (o *UserGetOAuth2ApplicationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user get o auth2 application o k response has a 3xx status code
func (o *UserGetOAuth2ApplicationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user get o auth2 application o k response has a 4xx status code
func (o *UserGetOAuth2ApplicationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user get o auth2 application o k response has a 5xx status code
func (o *UserGetOAuth2ApplicationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user get o auth2 application o k response a status code equal to that given
func (o *UserGetOAuth2ApplicationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the user get o auth2 application o k response
func (o *UserGetOAuth2ApplicationOK) Code() int {
	return 200
}

func (o *UserGetOAuth2ApplicationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user/applications/oauth2/{id}][%d] userGetOAuth2ApplicationOK %s", 200, payload)
}

func (o *UserGetOAuth2ApplicationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user/applications/oauth2/{id}][%d] userGetOAuth2ApplicationOK %s", 200, payload)
}

func (o *UserGetOAuth2ApplicationOK) GetPayload() *models.OAuth2Application {
	return o.Payload
}

func (o *UserGetOAuth2ApplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuth2Application)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserGetOAuth2ApplicationNotFound creates a UserGetOAuth2ApplicationNotFound with default headers values
func NewUserGetOAuth2ApplicationNotFound() *UserGetOAuth2ApplicationNotFound {
	return &UserGetOAuth2ApplicationNotFound{}
}

/*
UserGetOAuth2ApplicationNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type UserGetOAuth2ApplicationNotFound struct {
}

// IsSuccess returns true when this user get o auth2 application not found response has a 2xx status code
func (o *UserGetOAuth2ApplicationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user get o auth2 application not found response has a 3xx status code
func (o *UserGetOAuth2ApplicationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user get o auth2 application not found response has a 4xx status code
func (o *UserGetOAuth2ApplicationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user get o auth2 application not found response has a 5xx status code
func (o *UserGetOAuth2ApplicationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user get o auth2 application not found response a status code equal to that given
func (o *UserGetOAuth2ApplicationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the user get o auth2 application not found response
func (o *UserGetOAuth2ApplicationNotFound) Code() int {
	return 404
}

func (o *UserGetOAuth2ApplicationNotFound) Error() string {
	return fmt.Sprintf("[GET /user/applications/oauth2/{id}][%d] userGetOAuth2ApplicationNotFound", 404)
}

func (o *UserGetOAuth2ApplicationNotFound) String() string {
	return fmt.Sprintf("[GET /user/applications/oauth2/{id}][%d] userGetOAuth2ApplicationNotFound", 404)
}

func (o *UserGetOAuth2ApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
