// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"giteaApiClientGenerated/models"
)

// OrgEditHookReader is a Reader for the OrgEditHook structure.
type OrgEditHookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrgEditHookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrgEditHookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewOrgEditHookNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /orgs/{org}/hooks/{id}] orgEditHook", response, response.Code())
	}
}

// NewOrgEditHookOK creates a OrgEditHookOK with default headers values
func NewOrgEditHookOK() *OrgEditHookOK {
	return &OrgEditHookOK{}
}

/*
OrgEditHookOK describes a response with status code 200, with default header values.

Hook
*/
type OrgEditHookOK struct {
	Payload *models.Hook
}

// IsSuccess returns true when this org edit hook o k response has a 2xx status code
func (o *OrgEditHookOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this org edit hook o k response has a 3xx status code
func (o *OrgEditHookOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this org edit hook o k response has a 4xx status code
func (o *OrgEditHookOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this org edit hook o k response has a 5xx status code
func (o *OrgEditHookOK) IsServerError() bool {
	return false
}

// IsCode returns true when this org edit hook o k response a status code equal to that given
func (o *OrgEditHookOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the org edit hook o k response
func (o *OrgEditHookOK) Code() int {
	return 200
}

func (o *OrgEditHookOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /orgs/{org}/hooks/{id}][%d] orgEditHookOK %s", 200, payload)
}

func (o *OrgEditHookOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /orgs/{org}/hooks/{id}][%d] orgEditHookOK %s", 200, payload)
}

func (o *OrgEditHookOK) GetPayload() *models.Hook {
	return o.Payload
}

func (o *OrgEditHookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Hook)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrgEditHookNotFound creates a OrgEditHookNotFound with default headers values
func NewOrgEditHookNotFound() *OrgEditHookNotFound {
	return &OrgEditHookNotFound{}
}

/*
OrgEditHookNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type OrgEditHookNotFound struct {
}

// IsSuccess returns true when this org edit hook not found response has a 2xx status code
func (o *OrgEditHookNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this org edit hook not found response has a 3xx status code
func (o *OrgEditHookNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this org edit hook not found response has a 4xx status code
func (o *OrgEditHookNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this org edit hook not found response has a 5xx status code
func (o *OrgEditHookNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this org edit hook not found response a status code equal to that given
func (o *OrgEditHookNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the org edit hook not found response
func (o *OrgEditHookNotFound) Code() int {
	return 404
}

func (o *OrgEditHookNotFound) Error() string {
	return fmt.Sprintf("[PATCH /orgs/{org}/hooks/{id}][%d] orgEditHookNotFound", 404)
}

func (o *OrgEditHookNotFound) String() string {
	return fmt.Sprintf("[PATCH /orgs/{org}/hooks/{id}][%d] orgEditHookNotFound", 404)
}

func (o *OrgEditHookNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
