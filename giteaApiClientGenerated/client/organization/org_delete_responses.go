// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// OrgDeleteReader is a Reader for the OrgDelete structure.
type OrgDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrgDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewOrgDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewOrgDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /orgs/{org}] orgDelete", response, response.Code())
	}
}

// NewOrgDeleteNoContent creates a OrgDeleteNoContent with default headers values
func NewOrgDeleteNoContent() *OrgDeleteNoContent {
	return &OrgDeleteNoContent{}
}

/*
OrgDeleteNoContent describes a response with status code 204, with default header values.

APIEmpty is an empty response
*/
type OrgDeleteNoContent struct {
}

// IsSuccess returns true when this org delete no content response has a 2xx status code
func (o *OrgDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this org delete no content response has a 3xx status code
func (o *OrgDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this org delete no content response has a 4xx status code
func (o *OrgDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this org delete no content response has a 5xx status code
func (o *OrgDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this org delete no content response a status code equal to that given
func (o *OrgDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the org delete no content response
func (o *OrgDeleteNoContent) Code() int {
	return 204
}

func (o *OrgDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /orgs/{org}][%d] orgDeleteNoContent", 204)
}

func (o *OrgDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /orgs/{org}][%d] orgDeleteNoContent", 204)
}

func (o *OrgDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOrgDeleteNotFound creates a OrgDeleteNotFound with default headers values
func NewOrgDeleteNotFound() *OrgDeleteNotFound {
	return &OrgDeleteNotFound{}
}

/*
OrgDeleteNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type OrgDeleteNotFound struct {
}

// IsSuccess returns true when this org delete not found response has a 2xx status code
func (o *OrgDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this org delete not found response has a 3xx status code
func (o *OrgDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this org delete not found response has a 4xx status code
func (o *OrgDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this org delete not found response has a 5xx status code
func (o *OrgDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this org delete not found response a status code equal to that given
func (o *OrgDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the org delete not found response
func (o *OrgDeleteNotFound) Code() int {
	return 404
}

func (o *OrgDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /orgs/{org}][%d] orgDeleteNotFound", 404)
}

func (o *OrgDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /orgs/{org}][%d] orgDeleteNotFound", 404)
}

func (o *OrgDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
