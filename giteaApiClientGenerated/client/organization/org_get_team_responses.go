// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"giteaApiClientGenerated/models"
)

// OrgGetTeamReader is a Reader for the OrgGetTeam structure.
type OrgGetTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrgGetTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrgGetTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewOrgGetTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /teams/{id}] orgGetTeam", response, response.Code())
	}
}

// NewOrgGetTeamOK creates a OrgGetTeamOK with default headers values
func NewOrgGetTeamOK() *OrgGetTeamOK {
	return &OrgGetTeamOK{}
}

/*
OrgGetTeamOK describes a response with status code 200, with default header values.

Team
*/
type OrgGetTeamOK struct {
	Payload *models.Team
}

// IsSuccess returns true when this org get team o k response has a 2xx status code
func (o *OrgGetTeamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this org get team o k response has a 3xx status code
func (o *OrgGetTeamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this org get team o k response has a 4xx status code
func (o *OrgGetTeamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this org get team o k response has a 5xx status code
func (o *OrgGetTeamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this org get team o k response a status code equal to that given
func (o *OrgGetTeamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the org get team o k response
func (o *OrgGetTeamOK) Code() int {
	return 200
}

func (o *OrgGetTeamOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{id}][%d] orgGetTeamOK %s", 200, payload)
}

func (o *OrgGetTeamOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams/{id}][%d] orgGetTeamOK %s", 200, payload)
}

func (o *OrgGetTeamOK) GetPayload() *models.Team {
	return o.Payload
}

func (o *OrgGetTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrgGetTeamNotFound creates a OrgGetTeamNotFound with default headers values
func NewOrgGetTeamNotFound() *OrgGetTeamNotFound {
	return &OrgGetTeamNotFound{}
}

/*
OrgGetTeamNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type OrgGetTeamNotFound struct {
}

// IsSuccess returns true when this org get team not found response has a 2xx status code
func (o *OrgGetTeamNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this org get team not found response has a 3xx status code
func (o *OrgGetTeamNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this org get team not found response has a 4xx status code
func (o *OrgGetTeamNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this org get team not found response has a 5xx status code
func (o *OrgGetTeamNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this org get team not found response a status code equal to that given
func (o *OrgGetTeamNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the org get team not found response
func (o *OrgGetTeamNotFound) Code() int {
	return 404
}

func (o *OrgGetTeamNotFound) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] orgGetTeamNotFound", 404)
}

func (o *OrgGetTeamNotFound) String() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] orgGetTeamNotFound", 404)
}

func (o *OrgGetTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
