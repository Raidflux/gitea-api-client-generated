// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"giteaApiClientGenerated/models"
)

// OrgEditTeamReader is a Reader for the OrgEditTeam structure.
type OrgEditTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrgEditTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrgEditTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewOrgEditTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /teams/{id}] orgEditTeam", response, response.Code())
	}
}

// NewOrgEditTeamOK creates a OrgEditTeamOK with default headers values
func NewOrgEditTeamOK() *OrgEditTeamOK {
	return &OrgEditTeamOK{}
}

/*
OrgEditTeamOK describes a response with status code 200, with default header values.

Team
*/
type OrgEditTeamOK struct {
	Payload *models.Team
}

// IsSuccess returns true when this org edit team o k response has a 2xx status code
func (o *OrgEditTeamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this org edit team o k response has a 3xx status code
func (o *OrgEditTeamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this org edit team o k response has a 4xx status code
func (o *OrgEditTeamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this org edit team o k response has a 5xx status code
func (o *OrgEditTeamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this org edit team o k response a status code equal to that given
func (o *OrgEditTeamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the org edit team o k response
func (o *OrgEditTeamOK) Code() int {
	return 200
}

func (o *OrgEditTeamOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /teams/{id}][%d] orgEditTeamOK %s", 200, payload)
}

func (o *OrgEditTeamOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /teams/{id}][%d] orgEditTeamOK %s", 200, payload)
}

func (o *OrgEditTeamOK) GetPayload() *models.Team {
	return o.Payload
}

func (o *OrgEditTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOrgEditTeamNotFound creates a OrgEditTeamNotFound with default headers values
func NewOrgEditTeamNotFound() *OrgEditTeamNotFound {
	return &OrgEditTeamNotFound{}
}

/*
OrgEditTeamNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type OrgEditTeamNotFound struct {
}

// IsSuccess returns true when this org edit team not found response has a 2xx status code
func (o *OrgEditTeamNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this org edit team not found response has a 3xx status code
func (o *OrgEditTeamNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this org edit team not found response has a 4xx status code
func (o *OrgEditTeamNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this org edit team not found response has a 5xx status code
func (o *OrgEditTeamNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this org edit team not found response a status code equal to that given
func (o *OrgEditTeamNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the org edit team not found response
func (o *OrgEditTeamNotFound) Code() int {
	return 404
}

func (o *OrgEditTeamNotFound) Error() string {
	return fmt.Sprintf("[PATCH /teams/{id}][%d] orgEditTeamNotFound", 404)
}

func (o *OrgEditTeamNotFound) String() string {
	return fmt.Sprintf("[PATCH /teams/{id}][%d] orgEditTeamNotFound", 404)
}

func (o *OrgEditTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
