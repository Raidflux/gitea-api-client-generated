// Code generated by go-swagger; DO NOT EDIT.

package miscellaneous

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"giteaApiClientGenerated/models"
)

// GetLicenseTemplateInfoReader is a Reader for the GetLicenseTemplateInfo structure.
type GetLicenseTemplateInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLicenseTemplateInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLicenseTemplateInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetLicenseTemplateInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /licenses/{name}] getLicenseTemplateInfo", response, response.Code())
	}
}

// NewGetLicenseTemplateInfoOK creates a GetLicenseTemplateInfoOK with default headers values
func NewGetLicenseTemplateInfoOK() *GetLicenseTemplateInfoOK {
	return &GetLicenseTemplateInfoOK{}
}

/*
GetLicenseTemplateInfoOK describes a response with status code 200, with default header values.

LicenseTemplateInfo
*/
type GetLicenseTemplateInfoOK struct {
	Payload *models.LicenseTemplateInfo
}

// IsSuccess returns true when this get license template info o k response has a 2xx status code
func (o *GetLicenseTemplateInfoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get license template info o k response has a 3xx status code
func (o *GetLicenseTemplateInfoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get license template info o k response has a 4xx status code
func (o *GetLicenseTemplateInfoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get license template info o k response has a 5xx status code
func (o *GetLicenseTemplateInfoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get license template info o k response a status code equal to that given
func (o *GetLicenseTemplateInfoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get license template info o k response
func (o *GetLicenseTemplateInfoOK) Code() int {
	return 200
}

func (o *GetLicenseTemplateInfoOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /licenses/{name}][%d] getLicenseTemplateInfoOK %s", 200, payload)
}

func (o *GetLicenseTemplateInfoOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /licenses/{name}][%d] getLicenseTemplateInfoOK %s", 200, payload)
}

func (o *GetLicenseTemplateInfoOK) GetPayload() *models.LicenseTemplateInfo {
	return o.Payload
}

func (o *GetLicenseTemplateInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LicenseTemplateInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLicenseTemplateInfoNotFound creates a GetLicenseTemplateInfoNotFound with default headers values
func NewGetLicenseTemplateInfoNotFound() *GetLicenseTemplateInfoNotFound {
	return &GetLicenseTemplateInfoNotFound{}
}

/*
GetLicenseTemplateInfoNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type GetLicenseTemplateInfoNotFound struct {
}

// IsSuccess returns true when this get license template info not found response has a 2xx status code
func (o *GetLicenseTemplateInfoNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get license template info not found response has a 3xx status code
func (o *GetLicenseTemplateInfoNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get license template info not found response has a 4xx status code
func (o *GetLicenseTemplateInfoNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get license template info not found response has a 5xx status code
func (o *GetLicenseTemplateInfoNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get license template info not found response a status code equal to that given
func (o *GetLicenseTemplateInfoNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get license template info not found response
func (o *GetLicenseTemplateInfoNotFound) Code() int {
	return 404
}

func (o *GetLicenseTemplateInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /licenses/{name}][%d] getLicenseTemplateInfoNotFound", 404)
}

func (o *GetLicenseTemplateInfoNotFound) String() string {
	return fmt.Sprintf("[GET /licenses/{name}][%d] getLicenseTemplateInfoNotFound", 404)
}

func (o *GetLicenseTemplateInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
