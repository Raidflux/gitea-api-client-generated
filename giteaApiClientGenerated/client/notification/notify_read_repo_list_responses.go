// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Raidflux/gitea-api-client-generated/giteaApiClientGenerated/models"
)

// NotifyReadRepoListReader is a Reader for the NotifyReadRepoList structure.
type NotifyReadRepoListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotifyReadRepoListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 205:
		result := NewNotifyReadRepoListResetContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[PUT /repos/{owner}/{repo}/notifications] notifyReadRepoList", response, response.Code())
	}
}

// NewNotifyReadRepoListResetContent creates a NotifyReadRepoListResetContent with default headers values
func NewNotifyReadRepoListResetContent() *NotifyReadRepoListResetContent {
	return &NotifyReadRepoListResetContent{}
}

/*
NotifyReadRepoListResetContent describes a response with status code 205, with default header values.

NotificationThreadList
*/
type NotifyReadRepoListResetContent struct {
	Payload []*models.NotificationThread
}

// IsSuccess returns true when this notify read repo list reset content response has a 2xx status code
func (o *NotifyReadRepoListResetContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notify read repo list reset content response has a 3xx status code
func (o *NotifyReadRepoListResetContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify read repo list reset content response has a 4xx status code
func (o *NotifyReadRepoListResetContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this notify read repo list reset content response has a 5xx status code
func (o *NotifyReadRepoListResetContent) IsServerError() bool {
	return false
}

// IsCode returns true when this notify read repo list reset content response a status code equal to that given
func (o *NotifyReadRepoListResetContent) IsCode(code int) bool {
	return code == 205
}

// Code gets the status code for the notify read repo list reset content response
func (o *NotifyReadRepoListResetContent) Code() int {
	return 205
}

func (o *NotifyReadRepoListResetContent) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /repos/{owner}/{repo}/notifications][%d] notifyReadRepoListResetContent %s", 205, payload)
}

func (o *NotifyReadRepoListResetContent) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /repos/{owner}/{repo}/notifications][%d] notifyReadRepoListResetContent %s", 205, payload)
}

func (o *NotifyReadRepoListResetContent) GetPayload() []*models.NotificationThread {
	return o.Payload
}

func (o *NotifyReadRepoListResetContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
