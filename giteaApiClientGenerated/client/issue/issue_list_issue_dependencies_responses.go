// Code generated by go-swagger; DO NOT EDIT.

package issue

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Raidflux/gitea-api-client-generated/giteaApiClientGenerated/models"
)

// IssueListIssueDependenciesReader is a Reader for the IssueListIssueDependencies structure.
type IssueListIssueDependenciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IssueListIssueDependenciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIssueListIssueDependenciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewIssueListIssueDependenciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /repos/{owner}/{repo}/issues/{index}/dependencies] issueListIssueDependencies", response, response.Code())
	}
}

// NewIssueListIssueDependenciesOK creates a IssueListIssueDependenciesOK with default headers values
func NewIssueListIssueDependenciesOK() *IssueListIssueDependenciesOK {
	return &IssueListIssueDependenciesOK{}
}

/*
IssueListIssueDependenciesOK describes a response with status code 200, with default header values.

IssueList
*/
type IssueListIssueDependenciesOK struct {
	Payload []*models.Issue
}

// IsSuccess returns true when this issue list issue dependencies o k response has a 2xx status code
func (o *IssueListIssueDependenciesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this issue list issue dependencies o k response has a 3xx status code
func (o *IssueListIssueDependenciesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this issue list issue dependencies o k response has a 4xx status code
func (o *IssueListIssueDependenciesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this issue list issue dependencies o k response has a 5xx status code
func (o *IssueListIssueDependenciesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this issue list issue dependencies o k response a status code equal to that given
func (o *IssueListIssueDependenciesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the issue list issue dependencies o k response
func (o *IssueListIssueDependenciesOK) Code() int {
	return 200
}

func (o *IssueListIssueDependenciesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/issues/{index}/dependencies][%d] issueListIssueDependenciesOK %s", 200, payload)
}

func (o *IssueListIssueDependenciesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/issues/{index}/dependencies][%d] issueListIssueDependenciesOK %s", 200, payload)
}

func (o *IssueListIssueDependenciesOK) GetPayload() []*models.Issue {
	return o.Payload
}

func (o *IssueListIssueDependenciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIssueListIssueDependenciesNotFound creates a IssueListIssueDependenciesNotFound with default headers values
func NewIssueListIssueDependenciesNotFound() *IssueListIssueDependenciesNotFound {
	return &IssueListIssueDependenciesNotFound{}
}

/*
IssueListIssueDependenciesNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type IssueListIssueDependenciesNotFound struct {
}

// IsSuccess returns true when this issue list issue dependencies not found response has a 2xx status code
func (o *IssueListIssueDependenciesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this issue list issue dependencies not found response has a 3xx status code
func (o *IssueListIssueDependenciesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this issue list issue dependencies not found response has a 4xx status code
func (o *IssueListIssueDependenciesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this issue list issue dependencies not found response has a 5xx status code
func (o *IssueListIssueDependenciesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this issue list issue dependencies not found response a status code equal to that given
func (o *IssueListIssueDependenciesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the issue list issue dependencies not found response
func (o *IssueListIssueDependenciesNotFound) Code() int {
	return 404
}

func (o *IssueListIssueDependenciesNotFound) Error() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/issues/{index}/dependencies][%d] issueListIssueDependenciesNotFound", 404)
}

func (o *IssueListIssueDependenciesNotFound) String() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/issues/{index}/dependencies][%d] issueListIssueDependenciesNotFound", 404)
}

func (o *IssueListIssueDependenciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
