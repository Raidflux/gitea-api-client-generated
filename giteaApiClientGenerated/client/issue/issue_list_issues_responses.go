// Code generated by go-swagger; DO NOT EDIT.

package issue

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"giteaApiClientGenerated/models"
)

// IssueListIssuesReader is a Reader for the IssueListIssues structure.
type IssueListIssuesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IssueListIssuesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIssueListIssuesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewIssueListIssuesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /repos/{owner}/{repo}/issues] issueListIssues", response, response.Code())
	}
}

// NewIssueListIssuesOK creates a IssueListIssuesOK with default headers values
func NewIssueListIssuesOK() *IssueListIssuesOK {
	return &IssueListIssuesOK{}
}

/*
IssueListIssuesOK describes a response with status code 200, with default header values.

IssueList
*/
type IssueListIssuesOK struct {
	Payload []*models.Issue
}

// IsSuccess returns true when this issue list issues o k response has a 2xx status code
func (o *IssueListIssuesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this issue list issues o k response has a 3xx status code
func (o *IssueListIssuesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this issue list issues o k response has a 4xx status code
func (o *IssueListIssuesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this issue list issues o k response has a 5xx status code
func (o *IssueListIssuesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this issue list issues o k response a status code equal to that given
func (o *IssueListIssuesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the issue list issues o k response
func (o *IssueListIssuesOK) Code() int {
	return 200
}

func (o *IssueListIssuesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/issues][%d] issueListIssuesOK %s", 200, payload)
}

func (o *IssueListIssuesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/issues][%d] issueListIssuesOK %s", 200, payload)
}

func (o *IssueListIssuesOK) GetPayload() []*models.Issue {
	return o.Payload
}

func (o *IssueListIssuesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIssueListIssuesNotFound creates a IssueListIssuesNotFound with default headers values
func NewIssueListIssuesNotFound() *IssueListIssuesNotFound {
	return &IssueListIssuesNotFound{}
}

/*
IssueListIssuesNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type IssueListIssuesNotFound struct {
}

// IsSuccess returns true when this issue list issues not found response has a 2xx status code
func (o *IssueListIssuesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this issue list issues not found response has a 3xx status code
func (o *IssueListIssuesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this issue list issues not found response has a 4xx status code
func (o *IssueListIssuesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this issue list issues not found response has a 5xx status code
func (o *IssueListIssuesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this issue list issues not found response a status code equal to that given
func (o *IssueListIssuesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the issue list issues not found response
func (o *IssueListIssuesNotFound) Code() int {
	return 404
}

func (o *IssueListIssuesNotFound) Error() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/issues][%d] issueListIssuesNotFound", 404)
}

func (o *IssueListIssuesNotFound) String() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/issues][%d] issueListIssuesNotFound", 404)
}

func (o *IssueListIssuesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
