// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RepoDeleteAvatarReader is a Reader for the RepoDeleteAvatar structure.
type RepoDeleteAvatarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RepoDeleteAvatarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRepoDeleteAvatarNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewRepoDeleteAvatarNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /repos/{owner}/{repo}/avatar] repoDeleteAvatar", response, response.Code())
	}
}

// NewRepoDeleteAvatarNoContent creates a RepoDeleteAvatarNoContent with default headers values
func NewRepoDeleteAvatarNoContent() *RepoDeleteAvatarNoContent {
	return &RepoDeleteAvatarNoContent{}
}

/*
RepoDeleteAvatarNoContent describes a response with status code 204, with default header values.

APIEmpty is an empty response
*/
type RepoDeleteAvatarNoContent struct {
}

// IsSuccess returns true when this repo delete avatar no content response has a 2xx status code
func (o *RepoDeleteAvatarNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this repo delete avatar no content response has a 3xx status code
func (o *RepoDeleteAvatarNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repo delete avatar no content response has a 4xx status code
func (o *RepoDeleteAvatarNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this repo delete avatar no content response has a 5xx status code
func (o *RepoDeleteAvatarNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this repo delete avatar no content response a status code equal to that given
func (o *RepoDeleteAvatarNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the repo delete avatar no content response
func (o *RepoDeleteAvatarNoContent) Code() int {
	return 204
}

func (o *RepoDeleteAvatarNoContent) Error() string {
	return fmt.Sprintf("[DELETE /repos/{owner}/{repo}/avatar][%d] repoDeleteAvatarNoContent", 204)
}

func (o *RepoDeleteAvatarNoContent) String() string {
	return fmt.Sprintf("[DELETE /repos/{owner}/{repo}/avatar][%d] repoDeleteAvatarNoContent", 204)
}

func (o *RepoDeleteAvatarNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRepoDeleteAvatarNotFound creates a RepoDeleteAvatarNotFound with default headers values
func NewRepoDeleteAvatarNotFound() *RepoDeleteAvatarNotFound {
	return &RepoDeleteAvatarNotFound{}
}

/*
RepoDeleteAvatarNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type RepoDeleteAvatarNotFound struct {
}

// IsSuccess returns true when this repo delete avatar not found response has a 2xx status code
func (o *RepoDeleteAvatarNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repo delete avatar not found response has a 3xx status code
func (o *RepoDeleteAvatarNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repo delete avatar not found response has a 4xx status code
func (o *RepoDeleteAvatarNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this repo delete avatar not found response has a 5xx status code
func (o *RepoDeleteAvatarNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this repo delete avatar not found response a status code equal to that given
func (o *RepoDeleteAvatarNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the repo delete avatar not found response
func (o *RepoDeleteAvatarNotFound) Code() int {
	return 404
}

func (o *RepoDeleteAvatarNotFound) Error() string {
	return fmt.Sprintf("[DELETE /repos/{owner}/{repo}/avatar][%d] repoDeleteAvatarNotFound", 404)
}

func (o *RepoDeleteAvatarNotFound) String() string {
	return fmt.Sprintf("[DELETE /repos/{owner}/{repo}/avatar][%d] repoDeleteAvatarNotFound", 404)
}

func (o *RepoDeleteAvatarNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
