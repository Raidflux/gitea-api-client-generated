// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RepoGetEditorConfigReader is a Reader for the RepoGetEditorConfig structure.
type RepoGetEditorConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RepoGetEditorConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRepoGetEditorConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewRepoGetEditorConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /repos/{owner}/{repo}/editorconfig/{filepath}] repoGetEditorConfig", response, response.Code())
	}
}

// NewRepoGetEditorConfigOK creates a RepoGetEditorConfigOK with default headers values
func NewRepoGetEditorConfigOK() *RepoGetEditorConfigOK {
	return &RepoGetEditorConfigOK{}
}

/*
RepoGetEditorConfigOK describes a response with status code 200, with default header values.

success
*/
type RepoGetEditorConfigOK struct {
}

// IsSuccess returns true when this repo get editor config o k response has a 2xx status code
func (o *RepoGetEditorConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this repo get editor config o k response has a 3xx status code
func (o *RepoGetEditorConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repo get editor config o k response has a 4xx status code
func (o *RepoGetEditorConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this repo get editor config o k response has a 5xx status code
func (o *RepoGetEditorConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this repo get editor config o k response a status code equal to that given
func (o *RepoGetEditorConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the repo get editor config o k response
func (o *RepoGetEditorConfigOK) Code() int {
	return 200
}

func (o *RepoGetEditorConfigOK) Error() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/editorconfig/{filepath}][%d] repoGetEditorConfigOK", 200)
}

func (o *RepoGetEditorConfigOK) String() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/editorconfig/{filepath}][%d] repoGetEditorConfigOK", 200)
}

func (o *RepoGetEditorConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRepoGetEditorConfigNotFound creates a RepoGetEditorConfigNotFound with default headers values
func NewRepoGetEditorConfigNotFound() *RepoGetEditorConfigNotFound {
	return &RepoGetEditorConfigNotFound{}
}

/*
RepoGetEditorConfigNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type RepoGetEditorConfigNotFound struct {
}

// IsSuccess returns true when this repo get editor config not found response has a 2xx status code
func (o *RepoGetEditorConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repo get editor config not found response has a 3xx status code
func (o *RepoGetEditorConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repo get editor config not found response has a 4xx status code
func (o *RepoGetEditorConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this repo get editor config not found response has a 5xx status code
func (o *RepoGetEditorConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this repo get editor config not found response a status code equal to that given
func (o *RepoGetEditorConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the repo get editor config not found response
func (o *RepoGetEditorConfigNotFound) Code() int {
	return 404
}

func (o *RepoGetEditorConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/editorconfig/{filepath}][%d] repoGetEditorConfigNotFound", 404)
}

func (o *RepoGetEditorConfigNotFound) String() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/editorconfig/{filepath}][%d] repoGetEditorConfigNotFound", 404)
}

func (o *RepoGetEditorConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
