// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"giteaApiClientGenerated/models"
)

// RepoListPullRequestsReader is a Reader for the RepoListPullRequests structure.
type RepoListPullRequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RepoListPullRequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRepoListPullRequestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewRepoListPullRequestsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /repos/{owner}/{repo}/pulls] repoListPullRequests", response, response.Code())
	}
}

// NewRepoListPullRequestsOK creates a RepoListPullRequestsOK with default headers values
func NewRepoListPullRequestsOK() *RepoListPullRequestsOK {
	return &RepoListPullRequestsOK{}
}

/*
RepoListPullRequestsOK describes a response with status code 200, with default header values.

PullRequestList
*/
type RepoListPullRequestsOK struct {
	Payload []*models.PullRequest
}

// IsSuccess returns true when this repo list pull requests o k response has a 2xx status code
func (o *RepoListPullRequestsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this repo list pull requests o k response has a 3xx status code
func (o *RepoListPullRequestsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repo list pull requests o k response has a 4xx status code
func (o *RepoListPullRequestsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this repo list pull requests o k response has a 5xx status code
func (o *RepoListPullRequestsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this repo list pull requests o k response a status code equal to that given
func (o *RepoListPullRequestsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the repo list pull requests o k response
func (o *RepoListPullRequestsOK) Code() int {
	return 200
}

func (o *RepoListPullRequestsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/pulls][%d] repoListPullRequestsOK %s", 200, payload)
}

func (o *RepoListPullRequestsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/pulls][%d] repoListPullRequestsOK %s", 200, payload)
}

func (o *RepoListPullRequestsOK) GetPayload() []*models.PullRequest {
	return o.Payload
}

func (o *RepoListPullRequestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepoListPullRequestsNotFound creates a RepoListPullRequestsNotFound with default headers values
func NewRepoListPullRequestsNotFound() *RepoListPullRequestsNotFound {
	return &RepoListPullRequestsNotFound{}
}

/*
RepoListPullRequestsNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type RepoListPullRequestsNotFound struct {
}

// IsSuccess returns true when this repo list pull requests not found response has a 2xx status code
func (o *RepoListPullRequestsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repo list pull requests not found response has a 3xx status code
func (o *RepoListPullRequestsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repo list pull requests not found response has a 4xx status code
func (o *RepoListPullRequestsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this repo list pull requests not found response has a 5xx status code
func (o *RepoListPullRequestsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this repo list pull requests not found response a status code equal to that given
func (o *RepoListPullRequestsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the repo list pull requests not found response
func (o *RepoListPullRequestsNotFound) Code() int {
	return 404
}

func (o *RepoListPullRequestsNotFound) Error() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/pulls][%d] repoListPullRequestsNotFound", 404)
}

func (o *RepoListPullRequestsNotFound) String() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/pulls][%d] repoListPullRequestsNotFound", 404)
}

func (o *RepoListPullRequestsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
