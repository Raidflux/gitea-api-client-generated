// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RepoGetLanguagesReader is a Reader for the RepoGetLanguages structure.
type RepoGetLanguagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RepoGetLanguagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRepoGetLanguagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewRepoGetLanguagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /repos/{owner}/{repo}/languages] repoGetLanguages", response, response.Code())
	}
}

// NewRepoGetLanguagesOK creates a RepoGetLanguagesOK with default headers values
func NewRepoGetLanguagesOK() *RepoGetLanguagesOK {
	return &RepoGetLanguagesOK{}
}

/*
RepoGetLanguagesOK describes a response with status code 200, with default header values.

LanguageStatistics
*/
type RepoGetLanguagesOK struct {
	Payload map[string]int64
}

// IsSuccess returns true when this repo get languages o k response has a 2xx status code
func (o *RepoGetLanguagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this repo get languages o k response has a 3xx status code
func (o *RepoGetLanguagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repo get languages o k response has a 4xx status code
func (o *RepoGetLanguagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this repo get languages o k response has a 5xx status code
func (o *RepoGetLanguagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this repo get languages o k response a status code equal to that given
func (o *RepoGetLanguagesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the repo get languages o k response
func (o *RepoGetLanguagesOK) Code() int {
	return 200
}

func (o *RepoGetLanguagesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/languages][%d] repoGetLanguagesOK %s", 200, payload)
}

func (o *RepoGetLanguagesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/languages][%d] repoGetLanguagesOK %s", 200, payload)
}

func (o *RepoGetLanguagesOK) GetPayload() map[string]int64 {
	return o.Payload
}

func (o *RepoGetLanguagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRepoGetLanguagesNotFound creates a RepoGetLanguagesNotFound with default headers values
func NewRepoGetLanguagesNotFound() *RepoGetLanguagesNotFound {
	return &RepoGetLanguagesNotFound{}
}

/*
RepoGetLanguagesNotFound describes a response with status code 404, with default header values.

APINotFound is a not found empty response
*/
type RepoGetLanguagesNotFound struct {
}

// IsSuccess returns true when this repo get languages not found response has a 2xx status code
func (o *RepoGetLanguagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this repo get languages not found response has a 3xx status code
func (o *RepoGetLanguagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this repo get languages not found response has a 4xx status code
func (o *RepoGetLanguagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this repo get languages not found response has a 5xx status code
func (o *RepoGetLanguagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this repo get languages not found response a status code equal to that given
func (o *RepoGetLanguagesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the repo get languages not found response
func (o *RepoGetLanguagesNotFound) Code() int {
	return 404
}

func (o *RepoGetLanguagesNotFound) Error() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/languages][%d] repoGetLanguagesNotFound", 404)
}

func (o *RepoGetLanguagesNotFound) String() string {
	return fmt.Sprintf("[GET /repos/{owner}/{repo}/languages][%d] repoGetLanguagesNotFound", 404)
}

func (o *RepoGetLanguagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
