// Code generated by go-swagger; DO NOT EDIT.

package repository

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteRepoSecretParams creates a new DeleteRepoSecretParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteRepoSecretParams() *DeleteRepoSecretParams {
	return &DeleteRepoSecretParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteRepoSecretParamsWithTimeout creates a new DeleteRepoSecretParams object
// with the ability to set a timeout on a request.
func NewDeleteRepoSecretParamsWithTimeout(timeout time.Duration) *DeleteRepoSecretParams {
	return &DeleteRepoSecretParams{
		timeout: timeout,
	}
}

// NewDeleteRepoSecretParamsWithContext creates a new DeleteRepoSecretParams object
// with the ability to set a context for a request.
func NewDeleteRepoSecretParamsWithContext(ctx context.Context) *DeleteRepoSecretParams {
	return &DeleteRepoSecretParams{
		Context: ctx,
	}
}

// NewDeleteRepoSecretParamsWithHTTPClient creates a new DeleteRepoSecretParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteRepoSecretParamsWithHTTPClient(client *http.Client) *DeleteRepoSecretParams {
	return &DeleteRepoSecretParams{
		HTTPClient: client,
	}
}

/*
DeleteRepoSecretParams contains all the parameters to send to the API endpoint

	for the delete repo secret operation.

	Typically these are written to a http.Request.
*/
type DeleteRepoSecretParams struct {

	/* Owner.

	   owner of the repository
	*/
	Owner string

	/* Repo.

	   name of the repository
	*/
	Repo string

	/* Secretname.

	   name of the secret
	*/
	Secretname string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete repo secret params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteRepoSecretParams) WithDefaults() *DeleteRepoSecretParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete repo secret params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteRepoSecretParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete repo secret params
func (o *DeleteRepoSecretParams) WithTimeout(timeout time.Duration) *DeleteRepoSecretParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete repo secret params
func (o *DeleteRepoSecretParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete repo secret params
func (o *DeleteRepoSecretParams) WithContext(ctx context.Context) *DeleteRepoSecretParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete repo secret params
func (o *DeleteRepoSecretParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete repo secret params
func (o *DeleteRepoSecretParams) WithHTTPClient(client *http.Client) *DeleteRepoSecretParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete repo secret params
func (o *DeleteRepoSecretParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOwner adds the owner to the delete repo secret params
func (o *DeleteRepoSecretParams) WithOwner(owner string) *DeleteRepoSecretParams {
	o.SetOwner(owner)
	return o
}

// SetOwner adds the owner to the delete repo secret params
func (o *DeleteRepoSecretParams) SetOwner(owner string) {
	o.Owner = owner
}

// WithRepo adds the repo to the delete repo secret params
func (o *DeleteRepoSecretParams) WithRepo(repo string) *DeleteRepoSecretParams {
	o.SetRepo(repo)
	return o
}

// SetRepo adds the repo to the delete repo secret params
func (o *DeleteRepoSecretParams) SetRepo(repo string) {
	o.Repo = repo
}

// WithSecretname adds the secretname to the delete repo secret params
func (o *DeleteRepoSecretParams) WithSecretname(secretname string) *DeleteRepoSecretParams {
	o.SetSecretname(secretname)
	return o
}

// SetSecretname adds the secretname to the delete repo secret params
func (o *DeleteRepoSecretParams) SetSecretname(secretname string) {
	o.Secretname = secretname
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteRepoSecretParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param owner
	if err := r.SetPathParam("owner", o.Owner); err != nil {
		return err
	}

	// path param repo
	if err := r.SetPathParam("repo", o.Repo); err != nil {
		return err
	}

	// path param secretname
	if err := r.SetPathParam("secretname", o.Secretname); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
